/*
 * Generated by Bluespec Compiler, version 2016.07.beta1 (build 34806, 2016-07-05)
 * 
 * On Mon Apr 16 11:21:25 IST 2018
 * 
 */

/* Generation options: */
#ifndef __mkTestBench_h__
#define __mkTestBench_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTestBench module */
class MOD_mkTestBench : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_clk;
  MOD_Reg<tUInt32> INST_col;
  MOD_Reg<tUInt32> INST_expected;
  MOD_Reg<tUInt8> INST_init;
  MOD_Reg<tUInt32> INST_inputs;
  MOD_Reg<tUInt32> INST_lfsr_r;
  MOD_Reg<tUInt32> INST_madd;
  MOD_Reg<tUInt8> INST_madd_1;
  MOD_Reg<tUInt32> INST_madd_col;
  MOD_Reg<tUInt32> INST_madd_mat_0_0;
  MOD_Reg<tUInt32> INST_madd_mat_0_1;
  MOD_Reg<tUInt32> INST_madd_mat_0_2;
  MOD_Reg<tUInt32> INST_madd_mat_0_3;
  MOD_Reg<tUInt32> INST_madd_mat_0_4;
  MOD_Reg<tUInt32> INST_madd_mat_0_5;
  MOD_Reg<tUInt32> INST_madd_mat_0_6;
  MOD_Reg<tUInt32> INST_madd_mat_0_7;
  MOD_Reg<tUInt32> INST_madd_mat_0_8;
  MOD_Reg<tUInt32> INST_madd_mat_0_9;
  MOD_Reg<tUInt32> INST_madd_mat_1_0;
  MOD_Reg<tUInt32> INST_madd_mat_1_1;
  MOD_Reg<tUInt32> INST_madd_mat_1_2;
  MOD_Reg<tUInt32> INST_madd_mat_1_3;
  MOD_Reg<tUInt32> INST_madd_mat_1_4;
  MOD_Reg<tUInt32> INST_madd_mat_1_5;
  MOD_Reg<tUInt32> INST_madd_mat_1_6;
  MOD_Reg<tUInt32> INST_madd_mat_1_7;
  MOD_Reg<tUInt32> INST_madd_mat_1_8;
  MOD_Reg<tUInt32> INST_madd_mat_1_9;
  MOD_Reg<tUInt32> INST_madd_mat_2_0;
  MOD_Reg<tUInt32> INST_madd_mat_2_1;
  MOD_Reg<tUInt32> INST_madd_mat_2_2;
  MOD_Reg<tUInt32> INST_madd_mat_2_3;
  MOD_Reg<tUInt32> INST_madd_mat_2_4;
  MOD_Reg<tUInt32> INST_madd_mat_2_5;
  MOD_Reg<tUInt32> INST_madd_mat_2_6;
  MOD_Reg<tUInt32> INST_madd_mat_2_7;
  MOD_Reg<tUInt32> INST_madd_mat_2_8;
  MOD_Reg<tUInt32> INST_madd_mat_2_9;
  MOD_Reg<tUInt32> INST_madd_mat_3_0;
  MOD_Reg<tUInt32> INST_madd_mat_3_1;
  MOD_Reg<tUInt32> INST_madd_mat_3_2;
  MOD_Reg<tUInt32> INST_madd_mat_3_3;
  MOD_Reg<tUInt32> INST_madd_mat_3_4;
  MOD_Reg<tUInt32> INST_madd_mat_3_5;
  MOD_Reg<tUInt32> INST_madd_mat_3_6;
  MOD_Reg<tUInt32> INST_madd_mat_3_7;
  MOD_Reg<tUInt32> INST_madd_mat_3_8;
  MOD_Reg<tUInt32> INST_madd_mat_3_9;
  MOD_Reg<tUInt32> INST_madd_mat_4_0;
  MOD_Reg<tUInt32> INST_madd_mat_4_1;
  MOD_Reg<tUInt32> INST_madd_mat_4_2;
  MOD_Reg<tUInt32> INST_madd_mat_4_3;
  MOD_Reg<tUInt32> INST_madd_mat_4_4;
  MOD_Reg<tUInt32> INST_madd_mat_4_5;
  MOD_Reg<tUInt32> INST_madd_mat_4_6;
  MOD_Reg<tUInt32> INST_madd_mat_4_7;
  MOD_Reg<tUInt32> INST_madd_mat_4_8;
  MOD_Reg<tUInt32> INST_madd_mat_4_9;
  MOD_Reg<tUInt32> INST_madd_mat_5_0;
  MOD_Reg<tUInt32> INST_madd_mat_5_1;
  MOD_Reg<tUInt32> INST_madd_mat_5_2;
  MOD_Reg<tUInt32> INST_madd_mat_5_3;
  MOD_Reg<tUInt32> INST_madd_mat_5_4;
  MOD_Reg<tUInt32> INST_madd_mat_5_5;
  MOD_Reg<tUInt32> INST_madd_mat_5_6;
  MOD_Reg<tUInt32> INST_madd_mat_5_7;
  MOD_Reg<tUInt32> INST_madd_mat_5_8;
  MOD_Reg<tUInt32> INST_madd_mat_5_9;
  MOD_Reg<tUInt32> INST_madd_mat_6_0;
  MOD_Reg<tUInt32> INST_madd_mat_6_1;
  MOD_Reg<tUInt32> INST_madd_mat_6_2;
  MOD_Reg<tUInt32> INST_madd_mat_6_3;
  MOD_Reg<tUInt32> INST_madd_mat_6_4;
  MOD_Reg<tUInt32> INST_madd_mat_6_5;
  MOD_Reg<tUInt32> INST_madd_mat_6_6;
  MOD_Reg<tUInt32> INST_madd_mat_6_7;
  MOD_Reg<tUInt32> INST_madd_mat_6_8;
  MOD_Reg<tUInt32> INST_madd_mat_6_9;
  MOD_Reg<tUInt32> INST_madd_mat_7_0;
  MOD_Reg<tUInt32> INST_madd_mat_7_1;
  MOD_Reg<tUInt32> INST_madd_mat_7_2;
  MOD_Reg<tUInt32> INST_madd_mat_7_3;
  MOD_Reg<tUInt32> INST_madd_mat_7_4;
  MOD_Reg<tUInt32> INST_madd_mat_7_5;
  MOD_Reg<tUInt32> INST_madd_mat_7_6;
  MOD_Reg<tUInt32> INST_madd_mat_7_7;
  MOD_Reg<tUInt32> INST_madd_mat_7_8;
  MOD_Reg<tUInt32> INST_madd_mat_7_9;
  MOD_Reg<tUInt32> INST_madd_mat_8_0;
  MOD_Reg<tUInt32> INST_madd_mat_8_1;
  MOD_Reg<tUInt32> INST_madd_mat_8_2;
  MOD_Reg<tUInt32> INST_madd_mat_8_3;
  MOD_Reg<tUInt32> INST_madd_mat_8_4;
  MOD_Reg<tUInt32> INST_madd_mat_8_5;
  MOD_Reg<tUInt32> INST_madd_mat_8_6;
  MOD_Reg<tUInt32> INST_madd_mat_8_7;
  MOD_Reg<tUInt32> INST_madd_mat_8_8;
  MOD_Reg<tUInt32> INST_madd_mat_8_9;
  MOD_Reg<tUInt32> INST_madd_mat_9_0;
  MOD_Reg<tUInt32> INST_madd_mat_9_1;
  MOD_Reg<tUInt32> INST_madd_mat_9_2;
  MOD_Reg<tUInt32> INST_madd_mat_9_3;
  MOD_Reg<tUInt32> INST_madd_mat_9_4;
  MOD_Reg<tUInt32> INST_madd_mat_9_5;
  MOD_Reg<tUInt32> INST_madd_mat_9_6;
  MOD_Reg<tUInt32> INST_madd_mat_9_7;
  MOD_Reg<tUInt32> INST_madd_mat_9_8;
  MOD_Reg<tUInt32> INST_madd_mat_9_9;
  MOD_Reg<tUInt32> INST_madd_row;
  MOD_Reg<tUInt32> INST_mat_0_0;
  MOD_Reg<tUInt32> INST_mat_0_1;
  MOD_Reg<tUInt32> INST_mat_0_2;
  MOD_Reg<tUInt32> INST_mat_0_3;
  MOD_Reg<tUInt32> INST_mat_0_4;
  MOD_Reg<tUInt32> INST_mat_0_5;
  MOD_Reg<tUInt32> INST_mat_0_6;
  MOD_Reg<tUInt32> INST_mat_0_7;
  MOD_Reg<tUInt32> INST_mat_0_8;
  MOD_Reg<tUInt32> INST_mat_0_9;
  MOD_Reg<tUInt32> INST_mat_1_0;
  MOD_Reg<tUInt32> INST_mat_1_1;
  MOD_Reg<tUInt32> INST_mat_1_2;
  MOD_Reg<tUInt32> INST_mat_1_3;
  MOD_Reg<tUInt32> INST_mat_1_4;
  MOD_Reg<tUInt32> INST_mat_1_5;
  MOD_Reg<tUInt32> INST_mat_1_6;
  MOD_Reg<tUInt32> INST_mat_1_7;
  MOD_Reg<tUInt32> INST_mat_1_8;
  MOD_Reg<tUInt32> INST_mat_1_9;
  MOD_Reg<tUInt32> INST_mat_2_0;
  MOD_Reg<tUInt32> INST_mat_2_1;
  MOD_Reg<tUInt32> INST_mat_2_2;
  MOD_Reg<tUInt32> INST_mat_2_3;
  MOD_Reg<tUInt32> INST_mat_2_4;
  MOD_Reg<tUInt32> INST_mat_2_5;
  MOD_Reg<tUInt32> INST_mat_2_6;
  MOD_Reg<tUInt32> INST_mat_2_7;
  MOD_Reg<tUInt32> INST_mat_2_8;
  MOD_Reg<tUInt32> INST_mat_2_9;
  MOD_Reg<tUInt32> INST_mat_3_0;
  MOD_Reg<tUInt32> INST_mat_3_1;
  MOD_Reg<tUInt32> INST_mat_3_2;
  MOD_Reg<tUInt32> INST_mat_3_3;
  MOD_Reg<tUInt32> INST_mat_3_4;
  MOD_Reg<tUInt32> INST_mat_3_5;
  MOD_Reg<tUInt32> INST_mat_3_6;
  MOD_Reg<tUInt32> INST_mat_3_7;
  MOD_Reg<tUInt32> INST_mat_3_8;
  MOD_Reg<tUInt32> INST_mat_3_9;
  MOD_Reg<tUInt32> INST_mat_4_0;
  MOD_Reg<tUInt32> INST_mat_4_1;
  MOD_Reg<tUInt32> INST_mat_4_2;
  MOD_Reg<tUInt32> INST_mat_4_3;
  MOD_Reg<tUInt32> INST_mat_4_4;
  MOD_Reg<tUInt32> INST_mat_4_5;
  MOD_Reg<tUInt32> INST_mat_4_6;
  MOD_Reg<tUInt32> INST_mat_4_7;
  MOD_Reg<tUInt32> INST_mat_4_8;
  MOD_Reg<tUInt32> INST_mat_4_9;
  MOD_Reg<tUInt32> INST_mat_5_0;
  MOD_Reg<tUInt32> INST_mat_5_1;
  MOD_Reg<tUInt32> INST_mat_5_2;
  MOD_Reg<tUInt32> INST_mat_5_3;
  MOD_Reg<tUInt32> INST_mat_5_4;
  MOD_Reg<tUInt32> INST_mat_5_5;
  MOD_Reg<tUInt32> INST_mat_5_6;
  MOD_Reg<tUInt32> INST_mat_5_7;
  MOD_Reg<tUInt32> INST_mat_5_8;
  MOD_Reg<tUInt32> INST_mat_5_9;
  MOD_Reg<tUInt32> INST_mat_6_0;
  MOD_Reg<tUInt32> INST_mat_6_1;
  MOD_Reg<tUInt32> INST_mat_6_2;
  MOD_Reg<tUInt32> INST_mat_6_3;
  MOD_Reg<tUInt32> INST_mat_6_4;
  MOD_Reg<tUInt32> INST_mat_6_5;
  MOD_Reg<tUInt32> INST_mat_6_6;
  MOD_Reg<tUInt32> INST_mat_6_7;
  MOD_Reg<tUInt32> INST_mat_6_8;
  MOD_Reg<tUInt32> INST_mat_6_9;
  MOD_Reg<tUInt32> INST_mat_7_0;
  MOD_Reg<tUInt32> INST_mat_7_1;
  MOD_Reg<tUInt32> INST_mat_7_2;
  MOD_Reg<tUInt32> INST_mat_7_3;
  MOD_Reg<tUInt32> INST_mat_7_4;
  MOD_Reg<tUInt32> INST_mat_7_5;
  MOD_Reg<tUInt32> INST_mat_7_6;
  MOD_Reg<tUInt32> INST_mat_7_7;
  MOD_Reg<tUInt32> INST_mat_7_8;
  MOD_Reg<tUInt32> INST_mat_7_9;
  MOD_Reg<tUInt32> INST_mat_8_0;
  MOD_Reg<tUInt32> INST_mat_8_1;
  MOD_Reg<tUInt32> INST_mat_8_2;
  MOD_Reg<tUInt32> INST_mat_8_3;
  MOD_Reg<tUInt32> INST_mat_8_4;
  MOD_Reg<tUInt32> INST_mat_8_5;
  MOD_Reg<tUInt32> INST_mat_8_6;
  MOD_Reg<tUInt32> INST_mat_8_7;
  MOD_Reg<tUInt32> INST_mat_8_8;
  MOD_Reg<tUInt32> INST_mat_8_9;
  MOD_Reg<tUInt32> INST_mat_9_0;
  MOD_Reg<tUInt32> INST_mat_9_1;
  MOD_Reg<tUInt32> INST_mat_9_2;
  MOD_Reg<tUInt32> INST_mat_9_3;
  MOD_Reg<tUInt32> INST_mat_9_4;
  MOD_Reg<tUInt32> INST_mat_9_5;
  MOD_Reg<tUInt32> INST_mat_9_6;
  MOD_Reg<tUInt32> INST_mat_9_7;
  MOD_Reg<tUInt32> INST_mat_9_8;
  MOD_Reg<tUInt32> INST_mat_9_9;
  MOD_Reg<tUInt32> INST_row;
 
 /* Constructor */
 public:
  MOD_mkTestBench(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt32 DEF_x__h29219;
  tUInt32 DEF_b__h23556;
 
 /* Local definitions */
 private:
  tUInt32 DEF_d__h34666;
 
 /* Rules */
 public:
  void RL_madd_add();
  void RL__clk();
  void RL__init();
  void RL__putValues();
  void RL__print();
  void RL__checkAnswer();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTestBench &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTestBench &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTestBench &backing);
};

#endif /* ifndef __mkTestBench_h__ */
